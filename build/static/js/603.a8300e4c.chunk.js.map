{"version":3,"file":"static/js/603.a8300e4c.chunk.js","mappings":"iQAIA,MAAMA,GAAcC,EAAAA,EAAAA,IAAiBC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oMAQtBC,GA8CTC,EAAYC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,2GAOtBM,EAASH,EAAAA,GAAOC,IAAGG,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,gIAQnBQ,EAAQL,EAAAA,GAAOC,IAAGK,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,+NAWlBU,EAAqBP,EAAAA,GAAOC,IAAGO,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,mOAa/BY,EAAOT,EAAAA,GAAOC,IAAGS,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,+NAYjBc,EAAkBX,EAAAA,GAAOC,IAAGW,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,iOAY5BgB,EAAab,EAAAA,GAAOC,IAAGa,IAAAA,GAAAjB,EAAAA,EAAAA,GAAA,qLAWvBkB,EAAOf,EAAAA,GAAOC,IAAGe,IAAAA,GAAAnB,EAAAA,EAAAA,GAAA,kQAcjBoB,EAAgBjB,EAAAA,GAAOC,IAAGiB,IAAAA,GAAArB,EAAAA,EAAAA,GAAA,kPAY1BsB,EAAgBnB,EAAAA,GAAOC,IAAGmB,IAAAA,GAAAvB,EAAAA,EAAAA,GAAA,kPAY1BwB,EAAUrB,EAAAA,GAAOC,IAAGqB,IAAAA,GAAAzB,EAAAA,EAAAA,GAAA,iJASpB0B,EAAiBvB,EAAAA,GAAOC,IAAGuB,IAAAA,GAAA3B,EAAAA,EAAAA,GAAA,mJAS3B4B,EAAezB,EAAAA,GAAOC,IAAGyB,IAAAA,GAAA7B,EAAAA,EAAAA,GAAA,kIAQ/B,EAhL8B8B,IAIvB,IAJwB,eAC7BC,EAAc,gBACdC,EAAe,gBACfC,GACDH,EACC,OACEI,EAAAA,EAAAA,MAAChC,EAAS,CAAAiC,SAAA,EACRC,EAAAA,EAAAA,KAACvC,EAAW,KACZuC,EAAAA,EAAAA,KAAC9B,EAAM,CAAA6B,UACLC,EAAAA,EAAAA,KAAC5B,EAAK,CAAA2B,SAAC,iCAETD,EAAAA,EAAAA,MAACxB,EAAkB,CAAAyB,SAAA,EACjBD,EAAAA,EAAAA,MAACtB,EAAI,CAAAuB,SAAA,EACHC,EAAAA,EAAAA,KAACtB,EAAe,CAAAqB,SAAC,gCACjBC,EAAAA,EAAAA,KAACpB,EAAU,CAAAmB,SAAC,+BACZC,EAAAA,EAAAA,KAACpB,EAAU,CAAAmB,SAAC,+BACZC,EAAAA,EAAAA,KAAClB,EAAI,CAAAiB,SAAEJ,KACPG,EAAAA,EAAAA,MAAChB,EAAI,CAAAiB,SAAA,EACHD,EAAAA,EAAAA,MAACd,EAAa,CAAAe,SAAA,CAAEH,EAAgB,QAChCE,EAAAA,EAAAA,MAACV,EAAO,CAAAW,SAAA,CACJH,EAAkBD,EAAkB,IAAI,MAAIA,SAGlDG,EAAAA,EAAAA,MAAChB,EAAI,CAAAiB,SAAA,EACHD,EAAAA,EAAAA,MAACZ,EAAa,CAAAa,SAAA,CAAEF,EAAgB,QAChCC,EAAAA,EAAAA,MAACV,EAAO,CAAAW,SAAA,CACJF,EAAkBF,EAAkB,IAAI,MAAIA,YAIpDK,EAAAA,EAAAA,KAACV,EAAc,KACfU,EAAAA,EAAAA,KAACR,EAAY,CAACS,MAAO,CAAEC,KAAM,aAC7BF,EAAAA,EAAAA,KAACR,EAAY,CAACS,MAAO,CAAEC,KAAM,iBAErB,E,6GC5BhB,MACA,EAAe,IAA0B,yE,6CCjBzC,MAAMC,GAAU,CACdC,MAAO,CACLC,QAAS,CACPC,MAAM,GAERC,OAAQ,IACRC,SAAS,GAEXC,WAAY,CACVC,SAAS,GAEXC,OAAQ,CAAC,UAAW,WACpBC,OAAQ,CACNC,MAAO,CAAC,EAAG,IAEbC,YAAa,CACXC,IAAK,CACHC,YAAa,QAGjBC,MAAO,CACLC,WAAY,IAEdC,MAAO,CACL,CACEC,UAAW,CACTd,MAAM,GAERe,WAAY,CACVf,MAAM,EACNgB,MAAO,WAETC,OAAQ,CACNjB,MAAM,GAERkB,MAAO,CACLvB,MAAO,CACLqB,MAAO,YAGXG,QAAS,CACPnB,MAAM,KAIZoB,OAAQ,CACNC,gBAAiB,OACjBC,QAAS,KAIPC,GAAM,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UAE5B,SAASC,KAEtB,MAAOC,EAAcC,IAAmBC,EAAAA,EAAAA,OAGjCC,EAAMC,IAAWC,EAAAA,EAAAA,UAASC,KAAKC,MAAMP,EAAaQ,IAAI,WACtDC,EAASC,IAAcL,EAAAA,EAAAA,UAASjC,KAChCuC,EAASC,IAAcP,EAAAA,EAAAA,UAAS,CAAC,IACjCQ,EAASC,IAAcT,EAAAA,EAAAA,UAAS,CAAC,GAyBxC,OAvBAU,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAQb,EAAKc,uBAAuBC,MAAK,CAACC,EAAGC,IACjDC,IAAMF,EAAEG,aAAaC,KAAKH,EAAEE,eAG9BZ,EAAW,IACND,EACHvB,MAAO,CACLC,WAAY6B,EAAMQ,KAAKrB,GAASA,EAAKmB,iBAIzCV,EAAW,CACTT,KAAMa,EAAMQ,KAAKrB,GAASA,EAAKsB,yBAC/BC,KAAM,iBAERZ,EAAW,CACTX,KAAMa,EAAMQ,KAAKrB,GAASA,EAAKwB,yBAC/BD,KAAM,gBACN,GAED,KAGD3D,EAAAA,EAAAA,MAAChC,GAAS,CAAAiC,SAAA,EACRD,EAAAA,EAAAA,MAAC5B,GAAM,CAAA6B,SAAA,EACLC,EAAAA,EAAAA,KAAC2D,GAAK,CAAA5D,UACJC,EAAAA,EAAAA,KAAA,OACEa,MAAO,GACP+C,KAAKC,EAAAA,GAAAA,IAAS3B,EAAK4B,kBACnBC,IAAI,mBAGRjE,EAAAA,EAAAA,MAACkE,GAAQ,CAAAjE,SAAA,EACPD,EAAAA,EAAAA,MAAC1B,GAAK,CAAA2B,SAAA,EACJC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,WACNC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,wCAELD,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CAAEgE,QAAS,OAAQC,IAAK,MAAOC,WAAY,UAAWpE,SAAA,EAChEC,EAAAA,EAAAA,KAAA,OAAK4D,IAAKQ,EAAcL,IAAI,mBAC5BjE,EAAAA,EAAAA,MAAA,KAAGG,MAAO,CAAEoE,aAAc,QAAStE,SAAA,CAAC,QAC5BqD,IAAMlB,EAAKmB,aAAaiB,QAAU,EAAE,IACzClB,IAAMlB,EAAKmB,aAAakB,OAAO,IAC/B1C,GAAIuB,IAAMlB,EAAKmB,aAAamB,oBAKrC1E,EAAAA,EAAAA,MAAC2E,GAAI,CAAA1E,SAAA,EACHD,EAAAA,EAAAA,MAAA,MAAIG,MAAO,CAAEyE,OAAQ,UAAW3E,SAAA,CAAC,yCAE/BC,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,QAAMC,MAAO,CAAEqB,OAAOqD,EAAAA,GAAAA,IAAUzC,EAAK4B,mBAAoB/D,UACtD6E,EAAAA,GAAAA,IAAW1C,EAAK4B,oBACX,KACRhE,EAAAA,EAAAA,MAAA,QAAAC,SAAA,CAAOmC,EAAK2C,oBAAoB,WAElC7E,EAAAA,EAAAA,KAAA,KAAGC,MAAO,CAAEoE,aAAc,QAAStE,SAAEmC,EAAK4C,YAE1ChF,EAAAA,EAAAA,MAACiF,GAAmB,CAAAhF,SAAA,EAClBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,wDACJD,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACED,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,kBACJC,EAAAA,EAAAA,KAACgF,GAAS,CAACC,SAAU/C,EAAKgD,SAASC,MAAOC,OAAO,aACjDtF,EAAAA,EAAAA,MAACuF,GAAO,CAAAtF,SAAA,CAAEmC,EAAKgD,SAASC,MAAM,WAEhCrF,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,kBACJC,EAAAA,EAAAA,KAACgF,GAAS,CAACC,SAAU/C,EAAKgD,SAASI,UAAWF,OAAO,aACrDtF,EAAAA,EAAAA,MAACuF,GAAO,CAAAtF,SAAA,CAAEmC,EAAKgD,SAASI,UAAU,WAEpCxF,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,kBACJC,EAAAA,EAAAA,KAACgF,GAAS,CAACC,SAAU/C,EAAKgD,SAASK,QAASH,OAAO,aACnDtF,EAAAA,EAAAA,MAACuF,GAAO,CAAAtF,SAAA,CAAEmC,EAAKgD,SAASK,QAAQ,WAElCzF,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,kBACJC,EAAAA,EAAAA,KAACgF,GAAS,CAACC,SAAU/C,EAAKgD,SAASM,UAAWJ,OAAO,aACrDtF,EAAAA,EAAAA,MAACuF,GAAO,CAAAtF,SAAA,CAAEmC,EAAKgD,SAASM,UAAU,WAEpC1F,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,kBACJC,EAAAA,EAAAA,KAACgF,GAAS,CAACC,SAAU/C,EAAKgD,SAASO,QAASL,OAAO,aACnDtF,EAAAA,EAAAA,MAACuF,GAAO,CAAAtF,SAAA,CAAEmC,EAAKgD,SAASO,QAAQ,WAElC3F,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,kBACJC,EAAAA,EAAAA,KAACgF,GAAS,CAACC,SAAU/C,EAAKgD,SAASQ,WAAYN,OAAO,aACtDtF,EAAAA,EAAAA,MAACuF,GAAO,CAAAtF,SAAA,CAAEmC,EAAKgD,SAASQ,WAAW,iBAKzC5F,EAAAA,EAAAA,MAAC6F,GAAgB,CAAA5F,SAAA,EACfC,EAAAA,EAAAA,KAAC4F,EAAqB,CACpBjG,eAAgBuC,EAAK2D,mBACrBjG,gBAAiBsC,EAAK4D,wBACtBjG,gBAAiBqC,EAAK6D,2BAExB/F,EAAAA,EAAAA,KAACgG,GAAO,CAAAjG,SACLmC,EAAK+D,iBAAiB1C,KAAK2C,IAC1BpG,EAAAA,EAAAA,MAAA,QACEG,MAAO,CACLkG,iBAAiBxB,EAAAA,GAAAA,IAAUuB,EAAKE,cAChCrG,SAAA,CAGDmG,EAAKG,SAAU,MAFXH,EAAKG,kBAQlBvG,EAAAA,EAAAA,MAACwG,GAAK,CAAAvG,SAAA,EACJD,EAAAA,EAAAA,MAACyG,GAAW,CAAAxG,SAAA,EACVC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,uCACJD,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,+BACNC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,qCAGVC,EAAAA,EAAAA,KAACwG,EAAAA,EAAK,CAAChE,QAASA,EAASiE,OAAQ,CAAC/D,EAASE,SAG7C9C,EAAAA,EAAAA,MAAA,OACEG,MAAO,CACLyG,QAAS,YACTP,gBAAiB,UACjBzB,OAAQ,WACR3E,SAAA,EAEFC,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEoE,aAAc,QAAStE,SAAC,6FAGrCC,EAAAA,EAAAA,KAAA,OACEC,MAAO,CAAEY,MAAO,OAAQoD,QAAS,SACjCL,IAAK+C,EACL5C,IAAI,qBAGR/D,EAAAA,EAAAA,KAAC4G,EAAAA,GAAI,CAACC,GAAG,IAAG9G,UACVC,EAAAA,EAAAA,KAAC8G,GAAgB,CAAA/G,SAAC,iDAK5B,CAEA,MAAMjC,GAAYC,EAAAA,GAAOC,IAAGL,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wDAKtBM,GAASH,EAAAA,GAAOgJ,OAAM9I,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,gDAKtBoG,GAAWjG,EAAAA,GAAOC,IAAGG,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,uDAKrBQ,GAAQL,EAAAA,GAAOiJ,GAAE3I,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,iJAUjB+F,GAAQ5F,EAAAA,GAAOC,IAAGO,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,uIAWlB6G,GAAO1G,EAAAA,GAAOkJ,KAAIxI,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,yUAkBlBmH,GAAsBhH,EAAAA,GAAOC,IAAGW,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,wxBA4ChCoH,GAAYjH,EAAAA,GAAOC,IAAGa,IAAAA,GAAAjB,EAAAA,EAAAA,GAAA,yHACZ8B,IAAA,IAAC,SAAEuF,GAAUvF,EAAA,OAAKuF,CAAQ,IAC1BiC,IAAA,IAAC,OAAE9B,GAAQ8B,EAAA,OAAK9B,CAAM,IAKhCY,GAAUjI,EAAAA,GAAOC,IAAGe,IAAAA,GAAAnB,EAAAA,EAAAA,GAAA,QAEpB+H,GAAmB5H,EAAAA,GAAOC,IAAGiB,IAAAA,GAAArB,EAAAA,EAAAA,GAAA,qOAM/BoI,IAQEM,GAAQvI,EAAAA,GAAOC,IAAGmB,IAAAA,GAAAvB,EAAAA,EAAAA,GAAA,yFAOlB2I,GAAcxI,EAAAA,GAAOC,IAAGqB,KAAAA,IAAAzB,EAAAA,EAAAA,GAAA,qoBAoCxBkJ,GAAmB/I,EAAAA,GAAOC,IAAGuB,KAAAA,IAAA3B,EAAAA,EAAAA,GAAA,4KAW7ByH,GAAUtH,EAAAA,GAAOC,IAAGyB,KAAAA,IAAA7B,EAAAA,EAAAA,GAAA,oM","sources":["components/WordAnalysisDashboard.jsx","assets/report-calendar-icon.svg","pages/TodayReportPage.jsx"],"sourcesContent":["import React from \"react\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport StickRegularFont from \"../fonts/StickRegular.ttf\";\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    box-sizing: border-box;\n  }\n\n\n  @font-face {\n    font-family: 'stick';\n    src: url(${StickRegularFont}) format('truetype');\n    font-weight: normal;\n    font-style: normal;\n  }\n\n\n`;\n\nconst WordAnalysisDashboard = ({\n  totalSentences,\n  negativePercent,\n  positivePercent,\n}) => {\n  return (\n    <Container>\n      <GlobalStyle />\n      <Header>\n        <Title>문장 분석</Title>\n      </Header>\n      <DashboardContainer>\n        <Grid>\n          <CellHeaderTotal>총 문장 수</CellHeaderTotal>\n          <CellHeader>부정 문장</CellHeader>\n          <CellHeader>긍정 문장</CellHeader>\n          <Cell>{totalSentences}</Cell>\n          <Cell>\n            <NegativeValue>{negativePercent}%</NegativeValue>\n            <SubText>\n              {(negativePercent * totalSentences) / 100} / {totalSentences}\n            </SubText>\n          </Cell>\n          <Cell>\n            <PositiveValue>{positivePercent}%</PositiveValue>\n            <SubText>\n              {(positivePercent * totalSentences) / 100} / {totalSentences}\n            </SubText>\n          </Cell>\n        </Grid>\n        <HorizontalLine />\n        <VerticalLine style={{ left: \"33.33%\" }} />\n        <VerticalLine style={{ left: \"66.66%\" }} />\n      </DashboardContainer>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n  width: 340px;\n`;\n\nconst Title = styled.div`\n  color: var(--gray-800Font, #363636);\n  /* title/Md */\n  font-family: Pretendard;\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 120%; /* 21.6px */\n  letter-spacing: -0.36px;\n`;\n\nconst DashboardContainer = styled.div`\n  width: 340px;\n  height: 106px;\n  flex-shrink: 0;\n  border-radius: 16px;\n  border: 1px solid #d9d9d9;\n  background: #fff;\n  position: relative;\n  padding: 0;\n  box-sizing: border-box;\n  margin: 0px 0 18px;\n`;\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-template-rows: auto 1fr;\n  gap: 0px;\n  align-items: center;\n  justify-items: center;\n  width: 100%;\n  height: 100%;\n  box-sizing: border-box;\n`;\n\nconst CellHeaderTotal = styled.div`\n  color: var(--gray-800Font, #363636);\n  font-family: Pretendard;\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  text-align: center;\n  padding: 12px 0;\n  width: 100%;\n`;\n\nconst CellHeader = styled.div`\n  color: #404040;\n  font-family: Pretendard;\n  font-size: 16px;\n  font-weight: 700;\n  line-height: normal;\n  text-align: center;\n  padding: 12px 0;\n  width: 100%;\n`;\n\nconst Cell = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  color: #404040;\n  font-family: Pretendard;\n  font-size: 16px;\n  font-weight: 700;\n  line-height: normal;\n  text-align: center;\n  width: 100%;\n`;\n\nconst NegativeValue = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: var(--angry-500, #ff946d);\n  font-family: \"Stick\", sans-serif;\n  font-size: 20px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: normal;\n`;\n\nconst PositiveValue = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: var(--happy-500, #ffe156);\n  font-family: \"Stick\", sans-serif;\n  font-size: 20px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: normal;\n`;\n\nconst SubText = styled.div`\n  color: #8a8a8a;\n  font-family: Pretendard;\n  font-size: 10px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n`;\n\nconst HorizontalLine = styled.div`\n  position: absolute;\n  top: 39px;\n  left: 0;\n  width: 100%;\n  height: 0;\n  border-top: 2px solid var(--gray-400Neutral, #c5c5c5);\n`;\n\nconst VerticalLine = styled.div`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  width: 0;\n  border-left: 2px solid var(--gray-400Neutral, #c5c5c5);\n`;\n\nexport default WordAnalysisDashboard;\n","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgReportCalendarIcon(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 11 12\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M4.21014 1.10225C4.16919 0.838954 3.94148 0.637451 3.6667 0.637451C3.3675 0.637451 3.1241 0.876367 3.11686 1.17383C2.76986 1.22353 2.45908 1.30778 2.16853 1.45582C1.5476 1.7722 1.04276 2.27704 0.726378 2.89797C0.530421 3.28256 0.446238 3.70258 0.405992 4.19516C0.366691 4.67618 0.366695 5.2724 0.366699 6.02208V6.04614V6.41281V6.43687C0.366695 7.18655 0.366691 7.78277 0.405992 8.26379C0.446238 8.75637 0.530421 9.17639 0.726378 9.56098C1.04276 10.1819 1.5476 10.6867 2.16853 11.0031C2.55312 11.1991 2.97314 11.2833 3.46572 11.3235C3.94675 11.3628 4.54297 11.3628 5.29266 11.3628H5.3167H5.68337H5.7074C6.45709 11.3628 7.05332 11.3628 7.53435 11.3235C8.02693 11.2833 8.44695 11.1991 8.83153 11.0031C9.45247 10.6867 9.9573 10.1819 10.2737 9.56098C10.4696 9.17639 10.5538 8.75637 10.5941 8.26379C10.6334 7.78276 10.6334 7.18654 10.6334 6.43685V6.41281V6.04614V6.0221C10.6334 5.27242 10.6334 4.67619 10.5941 4.19516C10.5538 3.70258 10.4696 3.28256 10.2737 2.89797C9.9573 2.27704 9.45247 1.7722 8.83153 1.45582C8.54103 1.3078 8.23032 1.22356 7.88338 1.17385C7.87616 0.87638 7.63276 0.637451 7.33354 0.637451C7.05876 0.637451 6.83105 0.838956 6.7901 1.10226C6.46966 1.09614 6.11075 1.09614 5.70743 1.09614L5.68337 1.09614H5.3167L5.29263 1.09614C4.88939 1.09614 4.53054 1.09614 4.21014 1.10225ZM6.78355 2.56245V2.20231C6.4742 2.19627 6.11351 2.19614 5.68337 2.19614H5.3167C4.88664 2.19614 4.526 2.19627 4.2167 2.20231V2.56245C4.2167 2.86621 3.97046 3.11245 3.6667 3.11245C3.36294 3.11245 3.1167 2.86621 3.1167 2.56245V2.28903C2.93154 2.32537 2.7898 2.37383 2.66792 2.43593C2.25396 2.64685 1.91741 2.98341 1.70649 3.39736C1.60271 3.60103 1.53703 3.86018 1.50234 4.28474C1.46713 4.71571 1.4667 5.26699 1.4667 6.04614V6.41281C1.4667 7.19196 1.46713 7.74324 1.50234 8.17422C1.53703 8.59877 1.60271 8.85792 1.70649 9.06159C1.91741 9.47554 2.25396 9.8121 2.66792 10.023C2.87159 10.1268 3.13074 10.1925 3.55529 10.2272C3.98627 10.2624 4.53755 10.2628 5.3167 10.2628H5.68337C6.46251 10.2628 7.0138 10.2624 7.44477 10.2272C7.86933 10.1925 8.12847 10.1268 8.33214 10.023C8.7461 9.8121 9.08266 9.47554 9.29358 9.06159C9.39736 8.85792 9.46304 8.59877 9.49773 8.17422C9.53294 7.74324 9.53337 7.19196 9.53337 6.41281V6.04614C9.53337 5.267 9.53294 4.71571 9.49773 4.28474C9.46304 3.86018 9.39736 3.60103 9.29358 3.39736C9.08266 2.98341 8.7461 2.64685 8.33214 2.43593C8.21031 2.37385 8.06862 2.3254 7.88354 2.28907V2.56245C7.88354 2.86621 7.6373 3.11245 7.33354 3.11245C7.02979 3.11245 6.78355 2.86621 6.78355 2.56245ZM3.20854 3.84614C2.90479 3.84614 2.65855 4.09239 2.65855 4.39614C2.65855 4.6999 2.90479 4.94614 3.20854 4.94614H7.79188C8.09563 4.94614 8.34188 4.6999 8.34188 4.39614C8.34188 4.09239 8.09563 3.84614 7.79188 3.84614H3.20854ZM4.12521 6.68763C4.12521 6.94076 3.92001 7.14596 3.66688 7.14596C3.41375 7.14596 3.20854 6.94076 3.20854 6.68763C3.20854 6.4345 3.41375 6.2293 3.66688 6.2293C3.92001 6.2293 4.12521 6.4345 4.12521 6.68763ZM3.66688 8.97912C3.92001 8.97912 4.12521 8.77392 4.12521 8.52078C4.12521 8.26765 3.92001 8.06245 3.66688 8.06245C3.41375 8.06245 3.20854 8.26765 3.20854 8.52078C3.20854 8.77392 3.41375 8.97912 3.66688 8.97912ZM5.95837 8.52078C5.95837 8.77392 5.75316 8.97912 5.50003 8.97912C5.2469 8.97912 5.0417 8.77392 5.0417 8.52078C5.0417 8.26765 5.2469 8.06245 5.50003 8.06245C5.75316 8.06245 5.95837 8.26765 5.95837 8.52078ZM7.33346 8.97912C7.58659 8.97912 7.79179 8.77392 7.79179 8.52078C7.79179 8.26765 7.58659 8.06245 7.33346 8.06245C7.08033 8.06245 6.87512 8.26765 6.87512 8.52078C6.87512 8.77392 7.08033 8.97912 7.33346 8.97912ZM5.95837 6.68763C5.95837 6.94076 5.75316 7.14596 5.50003 7.14596C5.2469 7.14596 5.0417 6.94076 5.0417 6.68763C5.0417 6.4345 5.2469 6.2293 5.50003 6.2293C5.75316 6.2293 5.95837 6.4345 5.95837 6.68763ZM7.33346 7.14596C7.58659 7.14596 7.79179 6.94076 7.79179 6.68763C7.79179 6.4345 7.58659 6.2293 7.33346 6.2293C7.08033 6.2293 6.87512 6.4345 6.87512 6.68763C6.87512 6.94076 7.08033 7.14596 7.33346 7.14596Z\",\n    fill: \"#111111\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgReportCalendarIcon);\nexport default __webpack_public_path__ + \"static/media/report-calendar-icon.1ee942fa34a18aba5fbd113d19072cb3.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect, useState } from \"react\";\nimport WordAnalysisDashboard from \"../components/WordAnalysisDashboard\";\nimport styled from \"styled-components\";\nimport Chart from \"react-apexcharts\";\nimport CommingSoon from \"../assets/comming-soon.jpeg\";\nimport { Link, useSearchParams } from \"react-router-dom\";\nimport dayjs from \"dayjs\";\nimport CalendarIcon from \"../assets/report-calendar-icon.svg\";\nimport { getColors, getCover, getEmotion } from \"../utils/emotionColors\";\n\nconst OPTIONS = {\n  chart: {\n    toolbar: {\n      show: false,\n    },\n    height: 350,\n    stacked: false,\n  },\n  dataLabels: {\n    enabled: false,\n  },\n  colors: [\"#ffdc72\", \"#ffb199\"],\n  stroke: {\n    width: [4, 4],\n  },\n  plotOptions: {\n    bar: {\n      columnWidth: \"20%\",\n    },\n  },\n  xaxis: {\n    categories: [],\n  },\n  yaxis: [\n    {\n      axisTicks: {\n        show: true,\n      },\n      axisBorder: {\n        show: false,\n        color: \"#FF1654\",\n      },\n      labels: {\n        show: false,\n      },\n      title: {\n        style: {\n          color: \"#FF1654\",\n        },\n      },\n      tooltip: {\n        show: false,\n      },\n    },\n  ],\n  legend: {\n    horizontalAlign: \"left\",\n    offsetX: 40,\n  },\n};\n\nconst Day = [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"];\n\nexport default function TodayReportPage() {\n  // eslint-disable-next-line no-unused-vars\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  // eslint-disable-next-line no-unused-vars\n  const [data, setData] = useState(JSON.parse(searchParams.get(\"data\")));\n  const [options, setOptions] = useState(OPTIONS);\n  const [pSeries, setPSeries] = useState({});\n  const [nSeries, setNSeries] = useState({});\n\n  useEffect(() => {\n    const mData = data.monthlyEmotionResponse.sort((a, b) =>\n      dayjs(a.createdDate).diff(b.createdDate)\n    );\n\n    setOptions({\n      ...options,\n      xaxis: {\n        categories: mData.map((data) => data.createdDate),\n      },\n    });\n\n    setPSeries({\n      data: mData.map((data) => data.positiveEmotionPercent),\n      name: \"긍정\",\n    });\n    setNSeries({\n      data: mData.map((data) => data.negativeEmotionPercent),\n      name: \"부정\",\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Container>\n      <Header>\n        <Cover>\n          <img\n            width={10}\n            src={getCover(data.totalEmotionType)}\n            alt=\"angry_cover\"\n          />\n        </Cover>\n        <Headings>\n          <Title>\n            <span>Today</span>\n            <p>마음 리포트</p>\n          </Title>\n          <div style={{ display: \"flex\", gap: \"6px\", alignItems: \"center\" }}>\n            <img src={CalendarIcon} alt=\"calendar icon\" />\n            <p style={{ marginBottom: \"-4px\" }}>\n              2024-{dayjs(data.createdDate).month() + 1}-\n              {dayjs(data.createdDate).date()}-\n              {Day[dayjs(data.createdDate).day()]}\n            </p>\n          </div>\n        </Headings>\n      </Header>\n      <Main>\n        <h2 style={{ margin: \"15px 0\" }}>\n          민성님은 오늘\n          <br />\n          <span style={{ color: getColors(data.totalEmotionType) }}>\n            {getEmotion(data.totalEmotionType)}\n          </span>{\" \"}\n          <span>{data.totalEmotionPercent}%</span>\n        </h2>\n        <p style={{ marginBottom: \"15px\" }}>{data.feedback}</p>\n\n        <EmotionDistribution>\n          <h2>오늘의 감정 분포도</h2>\n          <ul>\n            <li>\n              <h3>분노</h3>\n              <GraphItem $percent={data.emotions.anger} $color=\"#ff946d\" />\n              <Percent>{data.emotions.anger}%</Percent>\n            </li>\n            <li>\n              <h3>놀람</h3>\n              <GraphItem $percent={data.emotions.surprised} $color=\"#faa3e0\" />\n              <Percent>{data.emotions.surprised}%</Percent>\n            </li>\n            <li>\n              <h3>불안</h3>\n              <GraphItem $percent={data.emotions.anxiety} $color=\"#a9eb90\" />\n              <Percent>{data.emotions.anxiety}%</Percent>\n            </li>\n            <li>\n              <h3>기쁨</h3>\n              <GraphItem $percent={data.emotions.happiness} $color=\"#ffe156\" />\n              <Percent>{data.emotions.happiness}%</Percent>\n            </li>\n            <li>\n              <h3>슬픔</h3>\n              <GraphItem $percent={data.emotions.sadness} $color=\"#bdd5fa\" />\n              <Percent>{data.emotions.sadness}%</Percent>\n            </li>\n            <li>\n              <h3>중립</h3>\n              <GraphItem $percent={data.emotions.neutrality} $color=\"#bdd5fa\" />\n              <Percent>{data.emotions.neutrality}%</Percent>\n            </li>\n          </ul>\n        </EmotionDistribution>\n\n        <SentenceAnalysis>\n          <WordAnalysisDashboard\n            totalSentences={data.totalSentenceCount}\n            negativePercent={data.negativeSentencePercent}\n            positivePercent={data.positiveSentencePercent}\n          />\n          <Wrapper>\n            {data.emotionSentences.map((item) => (\n              <span\n                style={{\n                  backgroundColor: getColors(item.emotionType),\n                }}\n                key={item.sentence}\n              >\n                {item.sentence}{\" \"}\n              </span>\n            ))}\n          </Wrapper>\n        </SentenceAnalysis>\n\n        <Graph>\n          <GraphHeader>\n            <h3>30일간의 변화</h3>\n            <div>\n              <span>긍정 문장</span>\n              <span>부정 문장</span>\n            </div>\n          </GraphHeader>\n          <Chart options={options} series={[pSeries, nSeries]} />\n        </Graph>\n\n        <div\n          style={{\n            padding: \"20px 15px\",\n            backgroundColor: \"#e0e0e0\",\n            margin: \"0 -15px\",\n          }}\n        >\n          <h3 style={{ marginBottom: \"10px\" }}>\n            과거에도 비슷한 감정을 느꼈어요\n          </h3>\n          <img\n            style={{ width: \"100%\", display: \"block\" }}\n            src={CommingSoon}\n            alt=\"comming_soon\"\n          />\n        </div>\n        <Link to=\"/\">\n          <StyledLinkButton>메인으로 가기</StyledLinkButton>\n        </Link>\n      </Main>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  min-height: 100vh;\n  background: #fafafa;\n`;\n\nconst Header = styled.header`\n  position: relative;\n  z-index: 1;\n`;\n\nconst Headings = styled.div`\n  padding-top: 40px;\n  padding-left: 20px;\n`;\n\nconst Title = styled.h1`\n  span {\n    font-family: stick;\n    font-size: 32px;\n    font-weight: 900;\n    line-height: 46.34px;\n    text-align: left;\n  }\n`;\n\nconst Cover = styled.div`\n  position: relative;\n  img {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    z-index: -1;\n  }\n`;\n\nconst Main = styled.main`\n  margin-top: 230px;\n  padding: 0 15px 120px;\n\n  p {\n    //styleName: body/Md;\n    font-family: Pretendard;\n    font-size: 16px;\n    font-weight: 400;\n    line-height: 25.6px;\n    letter-spacing: -0.02em;\n    text-align: justified;\n    margin-top: 10px;\n    color: #111111;\n    padding-bottom: 10px;\n  }\n`;\n\nconst EmotionDistribution = styled.div`\n  background-color: #fff;\n  margin: 0 -15px;\n\n  padding: 24px 16px 24px 16px;\n\n  h2 {\n    //styleName: title/Md;\n    font-family: Pretendard;\n    font-size: 18px;\n    font-weight: 700;\n    line-height: 21.6px;\n    letter-spacing: -0.02em;\n    text-align: left;\n    margin-bottom: 20px;\n  }\n\n  ul {\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n    width: 90%;\n    li {\n      display: flex;\n      h3 {\n        //styleName: caption/Md;\n        font-family: Pretendard;\n        font-size: 12px;\n        font-weight: 400;\n        line-height: 14.32px;\n        text-align: left;\n\n        color: #111111;\n\n        width: 15%;\n        flex-shrink: 0;\n        background: #f3f3f3;\n\n        padding: 4px 5px 3px 7px;\n      }\n    }\n  }\n`;\n\nconst GraphItem = styled.div`\n  width: calc(${({ $percent }) => $percent}%);\n  background: ${({ $color }) => $color};\n  border-top-right-radius: 4px;\n  border-bottom-right-radius: 4px;\n`;\n\nconst Wrapper = styled.div``;\n\nconst SentenceAnalysis = styled.div`\n  padding: 20px 0;\n  border-top: 8px solid #e0e0e0;\n  border-bottom: 8px solid #e0e0e0;\n  margin: 0 -15px;\n\n  ${Wrapper} {\n    background: #dcdcdc;\n    margin: 0 20px;\n    padding: 10px;\n    border-radius: 12px;\n  }\n`;\n\nconst Graph = styled.div`\n  background: #fff;\n  padding: 30px 0;\n  margin: 0 -15px;\n  padding: 20px;\n`;\n\nconst GraphHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  div {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n\n    span {\n      //styleName: caption/graySm;\n      font-family: Pretendard;\n      font-size: 11px;\n      font-weight: 400;\n      line-height: 13.13px;\n      text-align: left;\n      display: flex;\n      align-items: center;\n      gap: 5px;\n      &:before {\n        content: \" \";\n        display: block;\n        width: 15px;\n        height: 3px;\n        background: #ffdc72;\n      }\n\n      &:last-child {\n        &:before {\n          background: #ffb199;\n        }\n      }\n    }\n  }\n`;\n\nconst StyledLinkButton = styled.div`\n  background: #000000;\n  color: #fff;\n  width: 100%;\n  display: block;\n  text-align: center;\n  padding: 15px 0;\n  border-radius: 8px;\n  margin-top: 20px;\n`;\n\nconst Percent = styled.div`\n  //styleName: body/Sm;\n  font-family: Pretendard;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 21px;\n  letter-spacing: -0.03em;\n  text-align: left;\n  margin-left: 10px;\n`;\n"],"names":["GlobalStyle","createGlobalStyle","_templateObject","_taggedTemplateLiteral","StickRegularFont","Container","styled","div","_templateObject2","Header","_templateObject3","Title","_templateObject4","DashboardContainer","_templateObject5","Grid","_templateObject6","CellHeaderTotal","_templateObject7","CellHeader","_templateObject8","Cell","_templateObject9","NegativeValue","_templateObject10","PositiveValue","_templateObject11","SubText","_templateObject12","HorizontalLine","_templateObject13","VerticalLine","_templateObject14","_ref","totalSentences","negativePercent","positivePercent","_jsxs","children","_jsx","style","left","OPTIONS","chart","toolbar","show","height","stacked","dataLabels","enabled","colors","stroke","width","plotOptions","bar","columnWidth","xaxis","categories","yaxis","axisTicks","axisBorder","color","labels","title","tooltip","legend","horizontalAlign","offsetX","Day","TodayReportPage","searchParams","setSearchParams","useSearchParams","data","setData","useState","JSON","parse","get","options","setOptions","pSeries","setPSeries","nSeries","setNSeries","useEffect","mData","monthlyEmotionResponse","sort","a","b","dayjs","createdDate","diff","map","positiveEmotionPercent","name","negativeEmotionPercent","Cover","src","getCover","totalEmotionType","alt","Headings","display","gap","alignItems","CalendarIcon","marginBottom","month","date","day","Main","margin","getColors","getEmotion","totalEmotionPercent","feedback","EmotionDistribution","GraphItem","$percent","emotions","anger","$color","Percent","surprised","anxiety","happiness","sadness","neutrality","SentenceAnalysis","WordAnalysisDashboard","totalSentenceCount","negativeSentencePercent","positiveSentencePercent","Wrapper","emotionSentences","item","backgroundColor","emotionType","sentence","Graph","GraphHeader","Chart","series","padding","CommingSoon","Link","to","StyledLinkButton","header","h1","main","_ref2"],"sourceRoot":""}